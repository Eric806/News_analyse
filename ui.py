import tkinter as tk

def main():
    root = tk.Tk()
    MainUI(root)
    root.mainloop()

class MainUI:
    def __init__(self, top=None):
        top.geometry("980x616+891+131")
        top.minsize(152, 1)
        top.maxsize(1924, 1055)
        top.resizable(0, 0)
        top.title("新聞文字雲分析")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.menubar = tk.Menu(top,font="TkMenuFont",bg='#d9d9d9',fg='#000000')
        top.configure(menu = self.menubar)

        self.Inputs = tk.Frame(self.top)
        self.Inputs.place(relx=0.02, rely=0.016, relheight=0.144, relwidth=0.958)

        self.Inputs.configure(relief='groove')
        self.Inputs.configure(borderwidth="2")
        self.Inputs.configure(relief="groove")
        self.Inputs.configure(background="#d9d9d9")
        self.Inputs.configure(highlightbackground="#d9d9d9")
        self.Inputs.configure(highlightcolor="black")
        self.Search = tk.Button(self.Inputs)
        self.Search.place(relx=0.52, rely=0.449, height=31, width=80)
        self.Search.configure(activebackground="beige")
        self.Search.configure(activeforeground="black")
        self.Search.configure(background="#d9d9d9")
        self.Search.configure(compound='left')
        self.Search.configure(disabledforeground="#a3a3a3")
        self.Search.configure(foreground="#000000")
        self.Search.configure(highlightbackground="#d9d9d9")
        self.Search.configure(highlightcolor="black")
        self.Search.configure(pady="0")
        self.Search.configure(text='''查詢資料庫''')
        self.Crawler = tk.Button(self.Inputs)
        self.Crawler.place(relx=0.637, rely=0.449, height=31, width=80)
        self.Crawler.configure(activebackground="beige")
        self.Crawler.configure(activeforeground="black")
        self.Crawler.configure(background="#d9d9d9")
        self.Crawler.configure(compound='left')
        self.Crawler.configure(disabledforeground="#a3a3a3")
        self.Crawler.configure(foreground="#000000")
        self.Crawler.configure(highlightbackground="#d9d9d9")
        self.Crawler.configure(highlightcolor="black")
        self.Crawler.configure(pady="0")
        self.Crawler.configure(text='''爬蟲''')
        self.Label1 = tk.Label(self.Inputs)
        self.Label1.place(relx=0.022, rely=0.112, height=26, width=179)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Microsoft JhengHei UI} -size 9")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''開始日期(YYYY/MM/DD)''')
        self.StartDate = tk.Entry(self.Inputs)
        self.StartDate.place(relx=0.011, rely=0.449, height=31, relwidth=0.196)
        self.StartDate.configure(background="white")
        self.StartDate.configure(disabledforeground="#a3a3a3")
        self.StartDate.configure(font="-family {細明體} -size 12")
        self.StartDate.configure(foreground="#000000")
        self.StartDate.configure(highlightbackground="#d9d9d9")
        self.StartDate.configure(highlightcolor="black")
        self.StartDate.configure(insertbackground="black")
        self.StartDate.configure(selectbackground="#c4c4c4")
        self.StartDate.configure(selectforeground="black")
        self.EndDate = tk.Entry(self.Inputs)
        self.EndDate.place(relx=0.26, rely=0.449, height=31, relwidth=0.196)
        self.EndDate.configure(background="white")
        self.EndDate.configure(disabledforeground="#a3a3a3")
        self.EndDate.configure(font="-family {細明體} -size 12")
        self.EndDate.configure(foreground="#000000")
        self.EndDate.configure(highlightbackground="#d9d9d9")
        self.EndDate.configure(highlightcolor="black")
        self.EndDate.configure(insertbackground="black")
        self.EndDate.configure(selectbackground="#c4c4c4")
        self.EndDate.configure(selectforeground="black")
        self.Label2 = tk.Label(self.Inputs)
        self.Label2.place(relx=0.256, rely=0.112, height=29, width=179)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Microsoft JhengHei UI} -size 9")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''結束日期(YYYY/MM/DD)''')
        self.Cloud = tk.Button(self.Inputs)
        self.Cloud.place(relx=0.756, rely=0.449, height=31, width=90)
        self.Cloud.configure(activebackground="beige")
        self.Cloud.configure(activeforeground="black")
        self.Cloud.configure(background="#d9d9d9")
        self.Cloud.configure(compound='left')
        self.Cloud.configure(disabledforeground="#a3a3a3")
        self.Cloud.configure(foreground="#000000")
        self.Cloud.configure(highlightbackground="#d9d9d9")
        self.Cloud.configure(highlightcolor="black")
        self.Cloud.configure(pady="0")
        self.Cloud.configure(text='''生成文字雲''')
        self.Output = tk.Frame(self.top)
        self.Output.place(relx=0.52, rely=0.179, relheight=0.805, relwidth=0.46)
        self.Output.configure(relief='groove')
        self.Output.configure(borderwidth="2")
        self.Output.configure(relief="groove")
        self.Output.configure(background="#d9d9d9")
        self.Output.configure(highlightbackground="#d9d9d9")
        self.Output.configure(highlightcolor="black")
        self.Label3 = tk.Label(self.Output)
        self.Label3.place(relx=0.044, rely=0.02, height=22, width=69)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Microsoft JhengHei UI} -size 9")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''新聞清單''')
        self.NewsList = tk.Listbox(self.Output)
        self.NewsList.place(relx=0.044, rely=0.06, relheight=0.841, relwidth=0.441)
        self.NewsList.configure(background="white")
        self.NewsList.configure(disabledforeground="#a3a3a3")
        self.NewsList.configure(font="-family {細明體} -size 12")
        self.NewsList.configure(foreground="#000000")
        self.NewsList.configure(highlightbackground="#d9d9d9")
        self.NewsList.configure(highlightcolor="black")
        self.NewsList.configure(selectbackground="blue")
        self.NewsList.configure(selectforeground="white")
        self.LogText = tk.Text(self.Output)
        self.LogText.place(relx=0.523, rely=0.06, relheight=0.839, relwidth=0.446)
        self.LogText.configure(background="white")
        self.LogText.configure(font="-family {Microsoft JhengHei UI} -size 12")
        self.LogText.configure(foreground="black")
        self.LogText.configure(highlightbackground="#d9d9d9")
        self.LogText.configure(highlightcolor="black")
        self.LogText.configure(insertbackground="black")
        self.LogText.configure(selectbackground="#c4c4c4")
        self.LogText.configure(selectforeground="black")
        self.LogText.configure(state='disabled')
        self.LogText.configure(wrap="word")
        self.Label4 = tk.Label(self.Output)
        self.Label4.place(relx=0.53, rely=0.02, height=19, width=30)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Microsoft JhengHei UI} -size 9")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Log''')
        self.ClearLog = tk.Button(self.Output)
        self.ClearLog.place(relx=0.798, rely=0.907, height=31, width=80)
        self.ClearLog.configure(activebackground="beige")
        self.ClearLog.configure(activeforeground="black")
        self.ClearLog.configure(background="#d9d9d9")
        self.ClearLog.configure(compound='left')
        self.ClearLog.configure(disabledforeground="#a3a3a3")
        self.ClearLog.configure(foreground="#000000")
        self.ClearLog.configure(highlightbackground="#d9d9d9")
        self.ClearLog.configure(highlightcolor="black")
        self.ClearLog.configure(pady="0")
        self.ClearLog.configure(text='''Clear Log''')
        self.GoodNewsCount = tk.Label(self.Output)
        self.GoodNewsCount.place(relx=0.044, rely=0.907, height=15, width=203)
        self.GoodNewsCount.configure(activebackground="#f9f9f9")
        self.GoodNewsCount.configure(anchor='w')
        self.GoodNewsCount.configure(background="#d9d9d9")
        self.GoodNewsCount.configure(compound='left')
        self.GoodNewsCount.configure(disabledforeground="#a3a3a3")
        self.GoodNewsCount.configure(foreground="#000000")
        self.GoodNewsCount.configure(highlightbackground="#d9d9d9")
        self.GoodNewsCount.configure(highlightcolor="black")
        self.GoodNewsCount.configure(text='''正面新聞數：''')
        self.BadNewsCount = tk.Label(self.Output)
        self.BadNewsCount.place(relx=0.044, rely=0.948, height=15, width=203)
        self.BadNewsCount.configure(activebackground="#f9f9f9")
        self.BadNewsCount.configure(anchor='w')
        self.BadNewsCount.configure(background="#d9d9d9")
        self.BadNewsCount.configure(compound='left')
        self.BadNewsCount.configure(disabledforeground="#a3a3a3")
        self.BadNewsCount.configure(foreground="#000000")
        self.BadNewsCount.configure(highlightbackground="#d9d9d9")
        self.BadNewsCount.configure(highlightcolor="black")
        self.BadNewsCount.configure(text='''負面新聞數：''')
        self.News = tk.Frame(self.top)
        self.News.place(relx=0.02, rely=0.179, relheight=0.805, relwidth=0.491)
        self.News.configure(relief='groove')
        self.News.configure(borderwidth="2")
        self.News.configure(relief="groove")
        self.News.configure(background="#d9d9d9")
        self.News.configure(highlightbackground="#d9d9d9")
        self.News.configure(highlightcolor="black")
        self.Label5 = tk.Label(self.News)
        self.Label5.place(relx=0.021, rely=0.02, height=22, width=45)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''標題''')
        self.NewsTitle = tk.Text(self.News)
        self.NewsTitle.place(relx=0.021, rely=0.06, relheight=0.06, relwidth=0.944)
        self.NewsTitle.configure(background="white")
        self.NewsTitle.configure(font="-family {Microsoft JhengHei UI} -size 12")
        self.NewsTitle.configure(foreground="black")
        self.NewsTitle.configure(highlightbackground="#d9d9d9")
        self.NewsTitle.configure(highlightcolor="black")
        self.NewsTitle.configure(insertbackground="black")
        self.NewsTitle.configure(selectbackground="#c4c4c4")
        self.NewsTitle.configure(selectforeground="black")
        self.NewsTitle.configure(state='disabled')
        self.NewsTitle.configure(wrap="word")
        self.Label5_1 = tk.Label(self.News)
        self.Label5_1.place(relx=0.021, rely=0.141, height=22, width=45)
        self.Label5_1.configure(activebackground="#f9f9f9")
        self.Label5_1.configure(anchor='w')
        self.Label5_1.configure(background="#d9d9d9")
        self.Label5_1.configure(compound='left')
        self.Label5_1.configure(disabledforeground="#a3a3a3")
        self.Label5_1.configure(foreground="#000000")
        self.Label5_1.configure(highlightbackground="#d9d9d9")
        self.Label5_1.configure(highlightcolor="black")
        self.Label5_1.configure(text='''內容''')
        self.NewsContent = tk.Text(self.News)
        self.NewsContent.place(relx=0.021, rely=0.181, relheight=0.726, relwidth=0.944)
        self.NewsContent.configure(background="white")
        self.NewsContent.configure(font="-family {Microsoft JhengHei UI} -size 12")
        self.NewsContent.configure(foreground="black")
        self.NewsContent.configure(highlightbackground="#d9d9d9")
        self.NewsContent.configure(highlightcolor="black")
        self.NewsContent.configure(insertbackground="black")
        self.NewsContent.configure(selectbackground="#c4c4c4")
        self.NewsContent.configure(selectforeground="black")
        self.NewsContent.configure(state='disabled')
        self.NewsContent.configure(wrap="word")
        self.NewsEmotionScore = tk.Label(self.News)
        self.NewsEmotionScore.place(relx=0.021, rely=0.907, height=22, width=125)
        self.NewsEmotionScore.configure(activebackground="#f9f9f9")
        self.NewsEmotionScore.configure(anchor='w')
        self.NewsEmotionScore.configure(background="#d9d9d9")
        self.NewsEmotionScore.configure(compound='left')
        self.NewsEmotionScore.configure(disabledforeground="#a3a3a3")
        self.NewsEmotionScore.configure(foreground="#000000")
        self.NewsEmotionScore.configure(highlightbackground="#d9d9d9")
        self.NewsEmotionScore.configure(highlightcolor="black")
        self.NewsEmotionScore.configure(text='''情緒分數：''')
        self.Filter = tk.Button(self.Inputs)
        self.Filter.place(relx=0.9, rely=0.449, height=31, width=80)
        self.Filter.configure(activebackground="beige")
        self.Filter.configure(activeforeground="black")
        self.Filter.configure(background="#d9d9d9")
        self.Filter.configure(compound='left')
        self.Filter.configure(disabledforeground="#a3a3a3")
        self.Filter.configure(foreground="#000000")
        self.Filter.configure(highlightbackground="#d9d9d9")
        self.Filter.configure(highlightcolor="black")
        self.Filter.configure(pady="0")
        self.Filter.configure(text='''篩選''')
        self.FilterText = tk.Entry(self.Inputs)
        self.FilterText.place(relx=0.85, rely=0.05, height=31, width=125)
        self.FilterText.configure(background="white")
        self.FilterText.configure(disabledforeground="#a3a3a3")
        self.FilterText.configure(font="-family {細明體} -size 12")
        self.FilterText.configure(foreground="#000000")
        self.FilterText.configure(highlightbackground="#d9d9d9")
        self.FilterText.configure(highlightcolor="black")
        self.FilterText.configure(insertbackground="black")
        self.FilterText.configure(selectbackground="#c4c4c4")
        self.FilterText.configure(selectforeground="black")
        self.Label6 = tk.Label(self.Inputs)
        self.Label6.place(relx=0.78, rely=0.07, height=26, width=60)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(compound='left')
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font="-family {Microsoft JhengHei UI} -size 9")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''篩選文字：''')

if __name__ == '__main__':
    main()
